# ================================================================
# DEVELOPMENT ENVIRONMENT TEMPLATE
# ================================================================
# 
# This template is optimized for local development
# Copy to .env.local and customize for your development setup
#
# Features enabled for development:
# - Debug logging
# - Mock external services
# - Relaxed security
# - Fast refresh and hot reload
# - Development-specific feature flags
#
# ================================================================

# ==================
# CORE ENVIRONMENT
# ==================
NODE_ENV="development"
NEXT_PUBLIC_ENVIRONMENT="development"
NEXT_PUBLIC_VERSION="2.0.0-dev"
NEXT_PUBLIC_DEBUG="true"
DEV_MODE="true"
NEXT_PUBLIC_DEV_MODE="true"

# ==================
# LOCAL DEVELOPMENT URLS
# ==================
NEXT_PUBLIC_API_URL="/api"
NEXT_PUBLIC_BASE_URL="http://localhost:3000"
BASE_URL="http://localhost:3000"
PORT="3000"
HOST="localhost"
HOSTNAME="localhost"

# API Configuration for Development
NEXT_PUBLIC_API_TIMEOUT="30000"
NEXT_PUBLIC_API_RETRY_ATTEMPTS="3"
REVIVAL_API_BASE="http://localhost:8000"

# ==================
# DEVELOPMENT DATABASE
# ==================
# Use local PostgreSQL instance for development
DATABASE_URL="postgresql://izerwaren_dev:izerwaren_dev@localhost:5432/izerwaren_dev?schema=public"

# Database settings optimized for development
DB_HOST="localhost"
DB_PORT="5432"
DB_NAME="izerwaren_dev"
DB_USER="izerwaren_dev"
DB_PASSWORD="izerwaren_dev"
DB_SSL="false"
DB_CONNECTION_TIMEOUT="30000"
DB_MAX_CONNECTIONS="5"

# ==================
# DEVELOPMENT AUTHENTICATION
# ==================
# Development JWT secret (not for production)
JWT_SECRET="development-jwt-secret-min-32-chars-long"
JWT_EXPIRES_IN="24h"

# Skip authentication for development ease
SKIP_FIREBASE_AUTH="true"
FIREBASE_PROJECT_ID="dev-mode-project"
FIREBASE_CLIENT_EMAIL="dev@example.com"
FIREBASE_PRIVATE_KEY="dev-private-key"

# Development Firebase client config
NEXT_PUBLIC_FIREBASE_PROJECT_ID="dev-mode-project"
NEXT_PUBLIC_FIREBASE_API_KEY="dev-api-key"
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID="123456789"
NEXT_PUBLIC_FIREBASE_APP_ID="dev-app-id"

# ==================
# DEVELOPMENT SHOPIFY (OPTIONAL)
# ==================
# Leave empty to use mock data, or configure with your development store
NEXT_PUBLIC_SHOPIFY_STORE_DOMAIN=""
NEXT_PUBLIC_SHOPIFY_STOREFRONT_ACCESS_TOKEN=""
SHOPIFY_SHOP_DOMAIN=""
SHOPIFY_ADMIN_ACCESS_TOKEN=""
SHOPIFY_WEBHOOK_SECRET="dev-webhook-secret"

# Shopify API settings for development
SHOPIFY_API_VERSION="2024-01"
SHOPIFY_MAX_RETRIES="2"
SHOPIFY_RETRY_DELAY="500"

# ==================
# DEVELOPMENT ASSETS
# ==================
LEGACY_IMAGE_DOMAIN="izerwaren.biz"
STATIC_ASSETS_PATH="/assets"
MAX_UPLOAD_SIZE="10485760"
ALLOWED_IMAGE_TYPES="image/jpeg,image/png,image/webp"
BODY_LIMIT="50mb"

# ==================
# DEVELOPMENT LOGGING
# ==================
LOG_LEVEL="debug"
LOG_FORMAT="dev"
ENABLE_REQUEST_LOGGING="true"
LOG_REQUEST_BODY="true"
ENABLE_ERROR_TRACKING="false"

# Development-specific logging
PRISMA_SHOW_ALL_TRACES="true"

# ==================
# DEVELOPMENT FEATURES
# ==================
# Relaxed rate limiting for development
RATE_LIMIT_MAX_REQUESTS="1000"
RATE_LIMIT_WINDOW_MS="60000"

# CORS settings for development
CORS_ORIGINS="http://localhost:3000,http://localhost:3001,http://localhost:8000"

# Development memory settings
MEMORY_LIMIT="512"

# ==================
# DEVELOPMENT TESTING
# ==================
PLAYWRIGHT_ENV="development"
PLAYWRIGHT_BASE_URL="http://localhost:3000"
SKIP_ACCESSIBILITY_TESTS="false"
SKIP_PERFORMANCE_TESTS="true"
SKIP_MOBILE_TESTS="true"

# ==================
# DEVELOPMENT MONITORING (OPTIONAL)
# ==================
# Leave empty to disable monitoring in development
SENTRY_DSN=""
NEXT_PUBLIC_SENTRY_DSN=""
CLOUD_TRACE_CONTEXT=""

# ================================================================
# DEVELOPMENT SETUP INSTRUCTIONS
# ================================================================
#
# 1. Install PostgreSQL locally:
#    brew install postgresql (macOS)
#    sudo apt-get install postgresql (Ubuntu)
#
# 2. Create development database:
#    createdb izerwaren_dev
#    createuser izerwaren_dev --pwprompt
#
# 3. Copy this file to .env.local:
#    cp .env.development.example .env.local
#
# 4. Install dependencies:
#    npm install
#
# 5. Run database migrations:
#    npm run db:migrate
#
# 6. Start development server:
#    npm run dev
#
# ================================================================