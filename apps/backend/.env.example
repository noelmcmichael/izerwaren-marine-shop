# ================================================================
# BACKEND-SPECIFIC ENVIRONMENT TEMPLATE
# ================================================================
# 
# This file contains environment variables specific to the Express.js backend
# These variables supplement the root .env configuration
#
# SECURITY: All variables here are server-side only and never exposed to browsers
#
# ================================================================

# ==================
# SERVER CONFIGURATION
# ==================
# Express server settings
PORT="3001"                                 # Backend server port
HOST="localhost"                            # Server host
HOSTNAME="localhost"                        # Server hostname
BASE_URL="http://localhost:3001"            # Backend base URL

# Server performance settings
KEEP_ALIVE_TIMEOUT="5000"                   # Keep-alive timeout in milliseconds
MEMORY_LIMIT="1024"                         # Memory limit in MB
BODY_LIMIT="50mb"                           # Request body size limit

# ==================
# DATABASE CONFIGURATION
# ==================
# PostgreSQL connection details
DATABASE_URL="postgresql://username:password@localhost:5432/izerwaren_dev?schema=public"
DB_HOST="localhost"
DB_PORT="5432"
DB_NAME="izerwaren_dev"
DB_USER="username"
DB_PASSWORD="password"
DB_SSL="false"
DB_CONNECTION_TIMEOUT="30000"
DB_MAX_CONNECTIONS="10"

# Prisma settings
PRISMA_SHOW_ALL_TRACES="false"             # Show detailed Prisma traces

# ==================
# AUTHENTICATION & SECURITY
# ==================
# JWT configuration
JWT_SECRET="your-jwt-secret-min-32-chars"   # JWT signing secret
JWT_EXPIRES_IN="24h"                       # Token expiration time

# Firebase Admin SDK (server-side)
FIREBASE_PROJECT_ID="your-firebase-project"
FIREBASE_CLIENT_EMAIL="firebase-admin@your-project.iam.gserviceaccount.com"
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY\n-----END PRIVATE KEY-----\n"

# Authentication bypass for development
SKIP_FIREBASE_AUTH="false"                 # Skip Firebase authentication

# ==================
# SHOPIFY ADMIN API
# ==================
# Shopify Admin API configuration (server-side only)
SHOPIFY_SHOP_DOMAIN="your-store.myshopify.com"
SHOPIFY_ADMIN_ACCESS_TOKEN="shpat_your-admin-token"
SHOPIFY_WEBHOOK_SECRET="your-webhook-secret"

# Shopify API settings
SHOPIFY_API_VERSION="2024-01"              # Shopify API version
SHOPIFY_MAX_RETRIES="3"                    # Maximum retry attempts
SHOPIFY_RETRY_DELAY="1000"                 # Delay between retries (ms)

# ==================
# EXTERNAL APIS
# ==================
# Revival API integration
REVIVAL_API_BASE="http://localhost:8000"   # Revival API endpoint

# Google Cloud services
GOOGLE_CLOUD_PROJECT="your-gcp-project"    # GCP project ID
USE_SECRET_MANAGER="false"                 # Enable GCP Secret Manager

# ==================
# LOGGING & MONITORING
# ==================
# Logging configuration
LOG_LEVEL="info"                           # Log level: error, warn, info, debug, trace
LOG_FORMAT="combined"                      # Log format: combined, common, dev, short, tiny
ENABLE_REQUEST_LOGGING="true"              # Enable HTTP request logging
LOG_REQUEST_BODY="false"                   # Log request bodies (security risk)
ENABLE_ERROR_TRACKING="true"               # Enable error tracking

# Error monitoring (Sentry)
SENTRY_DSN=""                              # Sentry DSN for server errors
SENTRY_ORG="your-sentry-org"               # Sentry organization
SENTRY_PROJECT="your-sentry-project"       # Sentry project
SENTRY_RELEASE=""                          # Release identifier

# Tracing
CLOUD_TRACE_CONTEXT=""                     # Cloud Trace context
OTEL_SEMCONV_STABILITY_OPT_IN="http/dup"   # OpenTelemetry settings

# ==================
# SECURITY & RATE LIMITING
# ==================
# CORS configuration
CORS_ORIGINS="http://localhost:3000"       # Allowed CORS origins

# Rate limiting
RATE_LIMIT_MAX_REQUESTS="100"              # Max requests per window
RATE_LIMIT_WINDOW_MS="60000"               # Rate limit window (1 minute)

# Proxy settings
HTTP_PROXY=""                              # HTTP proxy URL
HTTPS_PROXY=""                             # HTTPS proxy URL
NO_PROXY="localhost,127.0.0.1"             # Hosts to bypass proxy

# ==================
# FILE UPLOAD & ASSETS
# ==================
# File upload configuration
MAX_UPLOAD_SIZE="10485760"                 # Max upload size (10MB)
ALLOWED_IMAGE_TYPES="image/jpeg,image/png,image/webp"
STATIC_ASSETS_PATH="/assets"               # Static assets path

# Legacy image domain
LEGACY_IMAGE_DOMAIN="izerwaren.biz"        # Legacy image fallback domain

# ==================
# CLOUD RUN CONFIGURATION
# ==================
# Cloud Run service information (auto-populated in production)
SERVICE_NAME="izerwaren-backend"           # Service name
SERVICE_VERSION="1.0.0"                   # Service version
CLOUD_RUN_SERVICE_ID=""                   # Service ID (auto-generated)
CLOUD_RUN_REGION="us-central1"            # Deployment region

# ==================
# DEVELOPMENT SETTINGS
# ==================
# Development mode flags
DEV_MODE="true"                           # Global development flag
CI="false"                                # CI environment flag

# ================================================================
# BACKEND SECURITY CHECKLIST
# ================================================================
#
# Before deploying:
# [ ] JWT_SECRET is at least 32 characters
# [ ] Database uses SSL in production (DB_SSL="true")
# [ ] CORS_ORIGINS restricted to allowed domains
# [ ] Rate limiting enabled and properly configured
# [ ] Sensitive environment variables use Secret Manager
# [ ] LOG_REQUEST_BODY disabled in production
# [ ] Error tracking configured
# [ ] File upload limits are appropriate
# [ ] Authentication is properly enabled
#
# ================================================================

# ================================================================
# BACKEND PERFORMANCE TUNING
# ================================================================
#
# For production:
# - Increase DB_MAX_CONNECTIONS based on load
# - Set appropriate KEEP_ALIVE_TIMEOUT
# - Configure MEMORY_LIMIT based on container resources
# - Set LOG_LEVEL to "warn" or "error" for performance
# - Enable connection pooling
# - Configure rate limiting based on expected traffic
#
# ================================================================