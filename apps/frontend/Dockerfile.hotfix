FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json ./
RUN npm install --production=false

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Copy standalone tsconfig for self-contained build
COPY tsconfig.standalone.json ./tsconfig.json

# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/docs/app/api-reference/next-config-js/telemetry
# Uncomment the following line in case you want to disable telemetry during the build.
ENV NEXT_TELEMETRY_DISABLED=1

RUN npm run build

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy public directory to the root public location
COPY --from=builder /app/public ./public

# Set the correct permission for prerender cache
RUN mkdir -p ./.next
RUN chown -R nextjs:nodejs ./.next

# Automatically leverage output traces to reduce image size
# Copy the entire standalone structure 
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
# Copy static files to the root .next/static location where the root server.js expects them
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# The server.js is at the root in the standalone output
CMD ["node", "server.js"]