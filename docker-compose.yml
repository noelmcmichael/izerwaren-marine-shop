services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: izerwaren-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: izerwaren_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - izerwaren-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d izerwaren_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
      target: development
    container_name: izerwaren-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@database:5432/izerwaren_dev?schema=public
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      # Mount source code for hot reload
      - ./apps/backend/src:/app/apps/backend/src
      - ./packages:/app/packages
      # Preserve node_modules for performance
      - backend_node_modules:/app/node_modules
      - backend_app_node_modules:/app/apps/backend/node_modules
    depends_on:
      database:
        condition: service_healthy
    networks:
      - izerwaren-network
    command: ["sh", "-c", "npm run db:migrate && npm run backend:dev"]

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
      target: development
    container_name: izerwaren-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: development-secret-key
      DATABASE_URL: postgresql://postgres:postgres@database:5432/izerwaren_dev?schema=public
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for hot reload
      - ./apps/frontend:/app/apps/frontend
      - ./packages:/app/packages
      # Preserve node_modules for performance
      - frontend_node_modules:/app/node_modules
      - frontend_app_node_modules:/app/apps/frontend/node_modules
      # Exclude .next build directory for hot reload
      - /app/apps/frontend/.next
    depends_on:
      - backend
      - database
    networks:
      - izerwaren-network

  # PgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: izerwaren-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@izerwaren.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - database
    networks:
      - izerwaren-network
    profiles:
      - tools

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  # Anonymous volumes for node_modules optimization
  backend_node_modules:
  backend_app_node_modules:
  frontend_node_modules:
  frontend_app_node_modules:

# Internal network for service communication
networks:
  izerwaren-network:
    driver: bridge
