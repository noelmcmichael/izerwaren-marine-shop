# ================================================================
# TEST ENVIRONMENT TEMPLATE
# ================================================================
# 
# This template is optimized for testing and CI/CD pipelines
# Copy to .env.test.local for local testing or set in CI environment
#
# Features enabled for testing:
# - Mock external services
# - In-memory databases for speed
# - Reduced timeouts for faster tests
# - Comprehensive logging for debugging
# - Isolated test data
#
# ================================================================

# ==================
# CORE ENVIRONMENT
# ==================
NODE_ENV="test"
NEXT_PUBLIC_ENVIRONMENT="test"
NEXT_PUBLIC_VERSION="2.0.0-test"
NEXT_PUBLIC_DEBUG="true"
DEV_MODE="true"
CI="true"

# ==================
# TEST URLS
# ==================
NEXT_PUBLIC_API_URL="/api"
NEXT_PUBLIC_BASE_URL="http://localhost:3000"
BASE_URL="http://localhost:3000"
PORT="3000"
HOST="localhost"

# API Configuration for Testing
NEXT_PUBLIC_API_TIMEOUT="10000"
NEXT_PUBLIC_API_RETRY_ATTEMPTS="1"

# ==================
# TEST DATABASE
# ==================
# Use separate test database or in-memory database
DATABASE_URL="postgresql://test_user:test_pass@localhost:5432/izerwaren_test?schema=public"

# Test database settings
DB_HOST="localhost"
DB_PORT="5432"
DB_NAME="izerwaren_test"
DB_USER="test_user"
DB_PASSWORD="test_pass"
DB_SSL="false"
DB_CONNECTION_TIMEOUT="10000"
DB_MAX_CONNECTIONS="3"

# ==================
# TEST AUTHENTICATION
# ==================
# Test JWT secret
JWT_SECRET="test-jwt-secret-min-32-chars-long-for-testing"
JWT_EXPIRES_IN="1h"

# Mock authentication for tests
SKIP_FIREBASE_AUTH="true"
FIREBASE_PROJECT_ID="test-project"
FIREBASE_CLIENT_EMAIL="test@example.com"
FIREBASE_PRIVATE_KEY="test-private-key"

# Test Firebase client config
NEXT_PUBLIC_FIREBASE_PROJECT_ID="test-project"
NEXT_PUBLIC_FIREBASE_API_KEY="test-api-key"
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID="123456789"
NEXT_PUBLIC_FIREBASE_APP_ID="test-app-id"

# ==================
# TEST SHOPIFY (MOCKED)
# ==================
# Use mock Shopify data for consistent testing
NEXT_PUBLIC_SHOPIFY_STORE_DOMAIN="test-store.myshopify.com"
NEXT_PUBLIC_SHOPIFY_STOREFRONT_ACCESS_TOKEN="test-storefront-token"
SHOPIFY_SHOP_DOMAIN="test-store.myshopify.com"
SHOPIFY_ADMIN_ACCESS_TOKEN="shpat_test_admin_token"
SHOPIFY_WEBHOOK_SECRET="test-webhook-secret"

# Shopify API settings for testing
SHOPIFY_API_VERSION="2024-01"
SHOPIFY_MAX_RETRIES="1"
SHOPIFY_RETRY_DELAY="100"

# ==================
# TEST ASSETS
# ==================
LEGACY_IMAGE_DOMAIN="test.izerwaren.biz"
STATIC_ASSETS_PATH="/test-assets"
MAX_UPLOAD_SIZE="1048576"
ALLOWED_IMAGE_TYPES="image/jpeg,image/png"
BODY_LIMIT="10mb"

# ==================
# TEST LOGGING
# ==================
LOG_LEVEL="debug"
LOG_FORMAT="simple"
ENABLE_REQUEST_LOGGING="false"
LOG_REQUEST_BODY="false"
ENABLE_ERROR_TRACKING="false"

# Disable external logging in tests
PRISMA_SHOW_ALL_TRACES="false"

# ==================
# TEST FEATURES
# ==================
# Disable rate limiting for tests
RATE_LIMIT_MAX_REQUESTS="10000"
RATE_LIMIT_WINDOW_MS="60000"

# Allow all origins in tests
CORS_ORIGINS="*"

# Reduced memory for test environment
MEMORY_LIMIT="256"

# ==================
# PLAYWRIGHT TESTING
# ==================
PLAYWRIGHT_ENV="test"
PLAYWRIGHT_BASE_URL="http://localhost:3000"
PLAYWRIGHT_FINAL_HEALTH_CHECK="true"

# Test configuration
TEST_CONFIG='{"mockExternalAPIs": true, "skipAuth": true, "useTestData": true}'
TEST_CORRELATION_ID="test-run-correlation-id"

# Test feature flags
SKIP_ACCESSIBILITY_TESTS="false"
SKIP_PERFORMANCE_TESTS="true"
SKIP_MOBILE_TESTS="false"

# ==================
# TEST MONITORING (DISABLED)
# ==================
# Disable external monitoring in tests
SENTRY_DSN=""
NEXT_PUBLIC_SENTRY_DSN=""
CLOUD_TRACE_CONTEXT=""

# ==================
# MOCK SERVICES
# ==================
# Enable mock services for testing
USE_MOCK_SHOPIFY="true"
USE_MOCK_FIREBASE="true"
MOCK_EXTERNAL_APIS="true"

# ================================================================
# TEST SETUP INSTRUCTIONS
# ================================================================
#
# 1. Create test database:
#    createdb izerwaren_test
#    createuser test_user --pwprompt
#
# 2. Copy this file to .env.test.local:
#    cp .env.test.example .env.test.local
#
# 3. Run tests:
#    npm test
#    npm run test:coverage
#    npm run test:e2e
#
# 4. Clean up test data:
#    npm run test:cleanup
#
# ================================================================

# ================================================================
# CI/CD CONFIGURATION
# ================================================================
#
# For GitHub Actions or other CI systems:
# - Set CI=true
# - Use in-memory databases when possible
# - Mock all external API calls
# - Use shorter timeouts
# - Enable comprehensive logging for debugging
# - Disable external monitoring services
#
# ================================================================